name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch

jobs:
  setup:
    runs-on: ubuntu-latest  # Running on the latest Ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Node.js for the frontend (assuming the frontend uses Node.js)
      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify the Node.js version

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend  # Adjust to your frontend folder
        run: npm install

      # Setup backend (Assuming backend is Node.js as well)
      - name: Setup Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify the Node.js version for backend

      # Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./backend  # Adjust to your backend folder
        run: npm install

  test:
    runs-on: ubuntu-latest  # Running on the latest Ubuntu
    needs: setup  # This ensures tests only run after setup
    steps:
      # Checkout code again for testing
      - name: Checkout code
        uses: actions/checkout@v2

      # Run frontend tests
      - name: Run frontend tests
        working-directory: ./frontend  # Adjust to your frontend folder
        run: |
          npm run test -- --ci --reporters=junit # Run frontend tests with a report output

      # Run backend tests
      - name: Run backend tests
        working-directory: ./backend  # Adjust to your backend folder
        run: |
          npm run test -- --ci --reporters=junit # Run backend tests with a report output

  upload-reports:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Checkout code again for report files
      - name: Checkout code
        uses: actions/checkout@v2

      # Upload frontend test report
      - name: Upload frontend test report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-report
          path: ./frontend/test-reports/*.xml  # Adjust based on your testing tool output

      # Upload backend test report
      - name: Upload backend test report
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-report
          path: ./backend/test-reports/*.xml  # Adjust based on your testing tool output
